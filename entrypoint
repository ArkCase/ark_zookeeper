#!/bin/bash

set -euo pipefail
. /.functions

set_or_default BASE_DIR "/app"
set_or_default INIT_DIR "${BASE_DIR}/init"
set_or_default CONF_DIR "${BASE_DIR}/conf"
set_or_default DATA_DIR "${BASE_DIR}/data"
set_or_default LOGS_DIR "${BASE_DIR}/logs"

set_or_default ZOOCFGDIR "${CONF_DIR}"
set_or_default ZOO_LOG_DIR "${LOGS_DIR}"

#
# Update the SSL certificate trusts
#
init_ssl

# Detect if it's been initialized (i.e. if DATA_DIR contains no files)
DATA_COUNT="$(find "${DATA_DIR}" -type f | wc -l)"
if [ "${DATA_COUNT}" -lt 1 ] ; then
	say "Initializing the instance"

	if [ ! -v MYID ] ; then
		say "No MYID envvar was given, will attempt to guess it"
		if [ ! -v POD_NAME ] ; then
			say "No POD_NAME variable was found, will use the first component of the hostname instead"
			POD_NAME="$(hostname)"
			POD_NAME="${POD_NAME%%.*}"
		fi
		[[ "${POD_NAME}" =~ ^.*-([0-9]+)$ ]] || fail "The pod name [${POD_NAME}] doesn't match the pattern for a stateful pod (must end with a number)"
		MYID="$(( ${BASH_REMATCH[1]} + 1 ))"
	fi
	[[ "${MYID}" =~ ^[1-9][0-9]*$ ]] || fail "The MYID value [${MYID}] is not a valid number in the range [1..255]"

	# Remove leading zeros, just in case
	MYID="$(( 10#${MYID} ))"
	[ ${MYID} -ge 1 ] && [ ${MYID} -le 255 ] || fail "The MYID value must be in the range [1..255] (${MYID})"

	zkServer-initialize.sh --force --myid=${MYID}
fi

say "Launching the main process"

set_or_default SERVER_GCFLAGS "-verbose:gc -Xlog:gc+heap=trace -Xlog:gc* -Xlog:age*=debug -Xlog:safepoint -Xlog:gc:${ZOO_LOG_DIR}/zookeeper-gc.log:uptimemillis:filecount=9,filesize=20M"

set_or_default SERVER_MEMFLAGS "-XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80"

set_or_default SERVER_JVMFLAGS "${SERVER_MEMFLAGS} ${SERVER_GCFLAGS}"

# Add the SSL settings
SERVER_JVMFLAGS+=" -Dzookeeper.serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory -Dzookeeper.ssl.keyStore.location=/.ssl/keystore.pkcs12 -Dzookeeper.ssl.keyStore.password=$(</.ssl/keystore.pass) -Dzookeeper.ssl.keyStore.type=PKCS12 -Dzookeeper.ssl.quorum.keyStore.location=/.ssl/keystore.pkcs12 -Dzookeeper.ssl.quorum.keyStore.password=$(</.ssl/keystore.pass) -Dzookeeper.ssl.quorum.keyStore.type=PKCS12 -Dzookeeper.ssl.quorum.hostnameVerification=false"

# Make sure it's visible downstream
export SERVER_JVMFLAGS

[ ${#} -gt 0 ] || set -- "start-foreground"
execute "${HOME_DIR}/bin/zkServer.sh" "${@}"
